<?php
// Test cron job compatibility with MySQL orders table
echo "<h1>üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Cron Job ‡πÅ‡∏•‡∏∞‡∏ï‡∏≤‡∏£‡∏≤‡∏á Orders ‡πÉ‡∏ô MySQL</h1>";

require_once __DIR__ . '/db.php';
require_once __DIR__ . '/pagination_manager.php';

echo "<h2>1Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>";
try {
    $db = dm_db();
    $info = dm_get_db_info();
    
    echo "<div style='background: #e8f5e8; padding: 15px; border: 1px solid #4CAF50; margin: 10px 0;'>";
    echo "<h3>‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MySQL ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h3>";
    echo "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: <strong>" . strtoupper($info['type']) . "</strong><br>";
    echo "‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: <strong>" . ($info['database'] ?? 'unknown') . "</strong><br>";
    echo "</div>";
    
} catch (Exception $e) {
    echo "<div style='background: #ffe6e6; padding: 15px; border: 1px solid red; margin: 10px 0;'>";
    echo "<h3>‚ùå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h3>";
    echo "Error: " . $e->getMessage() . "<br>";
    echo "</div>";
    exit;
}

echo "<hr>";

echo "<h2>2Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á Orders</h2>";

// Check orders table structure
try {
    $stmt = $db->query("DESCRIBE orders");
    $columns = $stmt->fetchAll();
    
    echo "<h3>üìã ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á Orders</h3>";
    echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr><th>Column</th><th>Type</th><th>Null</th><th>Key</th><th>Default</th></tr>";
    
    foreach ($columns as $column) {
        echo "<tr>";
        echo "<td><strong>" . htmlspecialchars($column['Field']) . "</strong></td>";
        echo "<td>" . htmlspecialchars($column['Type']) . "</td>";
        echo "<td>" . htmlspecialchars($column['Null']) . "</td>";
        echo "<td>" . htmlspecialchars($column['Key']) . "</td>";
        echo "<td>" . htmlspecialchars($column['Default']) . "</td>";
        echo "</tr>";
    }
    echo "</table>";
    
    // Check record count
    $stmt = $db->query("SELECT COUNT(*) as count FROM orders");
    $count = $stmt->fetch();
    echo "<p>üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô orders ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: <strong>" . number_format($count['count']) . "</strong> records</p>";
    
    // Show recent orders
    if ($count['count'] > 0) {
        echo "<h4>üìã Orders ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</h4>";
        $stmt = $db->query("SELECT platform, order_id, amount, status, created_at, fetched_at FROM orders ORDER BY fetched_at DESC LIMIT 5");
        $recent_orders = $stmt->fetchAll();
        
        echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
        echo "<tr><th>Platform</th><th>Order ID</th><th>Amount</th><th>Status</th><th>Created</th><th>Fetched</th></tr>";
        
        foreach ($recent_orders as $order) {
            echo "<tr>";
            echo "<td>" . htmlspecialchars($order['platform']) . "</td>";
            echo "<td>" . htmlspecialchars(substr($order['order_id'], 0, 20)) . "...</td>";
            echo "<td>" . number_format($order['amount'], 2) . "</td>";
            echo "<td>" . htmlspecialchars($order['status']) . "</td>";
            echo "<td>" . htmlspecialchars($order['created_at']) . "</td>";
            echo "<td>" . date('Y-m-d H:i:s', $order['fetched_at']) . "</td>";
            echo "</tr>";
        }
        echo "</table>";
    }
    
} catch (Exception $e) {
    echo "<div style='background: #ffe6e6; padding: 15px; border: 1px solid red; margin: 10px 0;'>";
    echo "<h3>‚ùå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á orders ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h3>";
    echo "Error: " . $e->getMessage() . "<br>";
    echo "</div>";
}

echo "<hr>";

echo "<h2>3Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö PaginationManager</h2>";

try {
    // Create mock API for testing
    $mockAPI = new class {
        public function getOrders($page = 1, $limit = 50, $dateFrom = null, $dateTo = null) {
            // Return mock data
            return [
                'success' => true,
                'data' => [
                    'orders' => [
                        [
                            'order_id' => 'MOCK_ORDER_' . time() . '_' . $page,
                            'amount' => rand(100, 5000) + (rand(0, 99) / 100),
                            'status' => ['pending', 'completed', 'cancelled'][rand(0, 2)],
                            'created_at' => date('Y-m-d H:i:s', time() - rand(0, 86400 * 7)),
                            'items' => [
                                ['name' => 'Test Product', 'quantity' => rand(1, 5), 'price' => rand(100, 1000)]
                            ]
                        ]
                    ],
                    'has_more' => false
                ]
            ];
        }
        
        public function testConnection() {
            return ['success' => true, 'message' => 'Mock API connection OK'];
        }
    };
    
    echo "<h3>üß™ ‡∏™‡∏£‡πâ‡∏≤‡∏á PaginationManager</h3>";
    $manager = new PaginationManager('test_platform', $mockAPI);
    echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á PaginationManager ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à<br>";
    
    echo "<h3>üì• ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Orders</h3>";
    $result = $manager->fetchAllOrders(date('Y-m-d'), date('Y-m-d'), 5);
    
    if ($result['success']) {
        echo "‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Orders ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!<br>";
        echo "üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥:<br>";
        echo "- Total fetched: <strong>" . $result['total_fetched'] . "</strong><br>";
        echo "- Total saved: <strong>" . $result['total_saved'] . "</strong><br>";
        echo "- Duration: <strong>" . number_format($result['duration_seconds'], 2) . "</strong> seconds<br>";
        
        if (!empty($result['errors'])) {
            echo "‚ö†Ô∏è Errors: " . count($result['errors']) . "<br>";
            foreach ($result['errors'] as $error) {
                echo "  - " . htmlspecialchars($error) . "<br>";
            }
        }
    } else {
        echo "‚ùå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Orders ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . ($result['error'] ?? 'Unknown error') . "<br>";
    }
    
} catch (Exception $e) {
    echo "<div style='background: #ffe6e6; padding: 15px; border: 1px solid red; margin: 10px 0;'>";
    echo "<h3>‚ùå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö PaginationManager ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h3>";
    echo "Error: " . $e->getMessage() . "<br>";
    echo "</div>";
}

echo "<hr>";

echo "<h2>4Ô∏è‚É£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Cron Job Files</h2>";

$cron_files = [
    'fetch_orders.php' => 'Main cron script',
    'pagination_manager.php' => 'Pagination manager class',
    'cron_fetch_orders.sh' => 'Shell script (if exists)',
    'cron_fetch_orders_cpanel.sh' => 'cPanel shell script (if exists)'
];

echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
echo "<tr><th>File</th><th>Description</th><th>Status</th><th>Size</th></tr>";

foreach ($cron_files as $file => $description) {
    $filepath = __DIR__ . '/' . $file;
    $exists = file_exists($filepath);
    $status = $exists ? '‚úÖ ‡∏û‡∏ö‡πÅ‡∏•‡πâ‡∏ß' : '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö';
    $size = $exists ? number_format(filesize($filepath)) . ' bytes' : '-';
    
    echo "<tr>";
    echo "<td><strong>" . htmlspecialchars($file) . "</strong></td>";
    echo "<td>" . htmlspecialchars($description) . "</td>";
    echo "<td>$status</td>";
    echo "<td>$size</td>";
    echo "</tr>";
}
echo "</table>";

echo "<hr>";

echo "<h2>5Ô∏è‚É£ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Cron Job</h2>";

echo "<div style='background: #f0f8ff; padding: 15px; border: 1px solid #0066cc; border-radius: 8px;'>";
echo "<h3>üìã ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Cron Job ‡πÉ‡∏ô cPanel</h3>";

echo "<h4>1. ‡πÄ‡∏Ç‡πâ‡∏≤ cPanel > Cron Jobs</h4>";
echo "<h4>2. ‡πÄ‡∏û‡∏¥‡πà‡∏° Cron Job ‡πÉ‡∏´‡∏°‡πà:</h4>";
echo "<pre style='background: #f8f9fa; padding: 10px; border: 1px solid #ccc;'>";
echo "# ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á (‡∏ó‡∏∏‡∏Å‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà 0)\n";
echo "0 * * * * /usr/local/bin/php /home/yourusername/public_html/fetch_orders.php all\n\n";

echo "# ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å 30 ‡∏ô‡∏≤‡∏ó‡∏µ\n";
echo "*/30 * * * * /usr/local/bin/php /home/yourusername/public_html/fetch_orders.php all\n\n";

echo "# ‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡πÄ‡∏ä‡πâ‡∏≤ 6 ‡πÇ‡∏°‡∏á (‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô)\n";
echo "0 6 * * * /usr/local/bin/php /home/yourusername/public_html/fetch_orders.php all --date=yesterday\n";
echo "</pre>";

echo "<h4>3. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:</h4>";
echo "<pre style='background: #f8f9fa; padding: 10px; border: 1px solid #ccc;'>";
echo "# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n";
echo "php fetch_orders.php all\n\n";

echo "# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Shopee ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô\n";
echo "php fetch_orders.php shopee\n\n";

echo "# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏\n";
echo "php fetch_orders.php all --date=2024-08-28\n\n";

echo "# ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\n";
echo "php fetch_orders.php all --from=2024-08-01 --to=2024-08-31\n\n";

echo "# ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô orders\n";
echo "php fetch_orders.php shopee --limit=500\n";
echo "</pre>";
echo "</div>";

echo "<hr>";

echo "<h2>6Ô∏è‚É£ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</h2>";

$current_time = date('Y-m-d H:i:s');
$orders_count = 0;

try {
    $stmt = $db->query("SELECT COUNT(*) as count FROM orders");
    $result = $stmt->fetch();
    $orders_count = $result['count'];
} catch (Exception $e) {
    // Table might not exist yet
}

echo "<div style='background: #e8f5e8; padding: 20px; border: 2px solid #4CAF50; border-radius: 10px;'>";
echo "<h3>üéâ ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!</h3>";
echo "<p><strong>‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤:</strong> $current_time</p>";
echo "<p><strong>‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</strong> MySQL (" . ($info['database'] ?? 'unknown') . ")</p>";
echo "<p><strong>‡∏ï‡∏≤‡∏£‡∏≤‡∏á Orders:</strong> ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>";
echo "<p><strong>Orders ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> " . number_format($orders_count) . " records</p>";
echo "<p><strong>PaginationManager:</strong> ‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>";
echo "<p><strong>Cron Job:</strong> ‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤</p>";
echo "</div>";

echo "<div style='background: #fff3cd; padding: 15px; border: 1px solid #ffc107; margin: 20px 0;'>";
echo "<h4>üöÄ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ</h4>";
echo "<ol>";
echo "<li>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ cPanel</li>";
echo "<li>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ cron job ‡πÉ‡∏ô cPanel</li>";
echo "<li>‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏±‡∏ô cron job: <code>php fetch_orders.php all</code></li>";
echo "<li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö log ‡πÅ‡∏•‡∏∞ orders table</li>";
echo "<li>‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Ç‡∏≠‡∏á cron job ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</li>";
echo "</ol>";
echo "</div>";

// Cleanup test data
try {
    $db->exec("DELETE FROM orders WHERE platform = 'test_platform'");
    echo "<p style='color: #666; font-size: 0.9em;'>üßπ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß</p>";
} catch (Exception $e) {
    // Ignore cleanup errors
}
?>
